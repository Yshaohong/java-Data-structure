package ListDome;

import java.util.Stack;

/**
 * @Author: yang
 * @Description: 两个栈实现一个队列
 * @Date: 2020/9/15 14:10
 */
public class Stack_Qu {
    private Stack<Integer> s1;
    private Stack<Integer> s2;
    int useSize;

    public Stack_Qu(){
        this.s1 = new Stack<>();
        this.s2 = new Stack<>();
        this.useSize = 0;
    }

    public void push(int x){
        s1.push(x);
    }

    public int pop(){
    if (s2.empty()){
        //如果第二个栈是空的，我们需要把s1中的元素放入s2
        while(!s1.empty()){
            int temp = s1.pop();
            s2.push(temp);
        }
    }
    //如果s2不为空
        int tmp = 0;
        if(!s2.empty()){
        tmp = s2.pop();
        }else {
            System.out.println("队列为空！");
            return -1;
        }
        return tmp;
    }

    public int peek(){
        if (s2.empty()){
            while (!s1.empty()){
            int temp  = s1.pop();
            s2.push(temp);
            }
        }
        int tmp = 0;

        if (!s2.empty()){
            tmp = s2.peek();
        }else {
            System.out.println("队列为空！");
            return -1;
        }
        return tmp;
    }

    public boolean empty(){
        if (s1.empty()&&s2.empty()){
            return true;
        }
           return false;
    }

}
